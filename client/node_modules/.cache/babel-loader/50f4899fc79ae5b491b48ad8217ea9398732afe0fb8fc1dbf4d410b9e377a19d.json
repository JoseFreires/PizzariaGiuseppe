{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Pastas\\\\Serious Things\\\\Folder_Developer\\\\React\\\\Site_Pizzaria\\\\client\\\\src\\\\context\\\\auth.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [client, setClient] = useState();\n  const register = (userName, userEmail, userPassword, userContact) => {\n    api.get('/clients').then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      data.filter(item => {}).map(item => {\n        if (item.email === userEmail) {\n          console.log(\"Já existe\");\n        } else {\n          console.log(\"Novo usuário\");\n        }\n      });\n    });\n\n    // api.post('/clients', {\n    //     name: userName,\n    //     email: userEmail,\n    //     password: userPassword,\n    //     contact: userContact\n    // }).then((response) => {\n    //     console.log(response)\n    // });\n  };\n\n  const login = (userEmail, userPassword) => {\n    api.get('/clients').then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      data.map(item => {\n        if (item.email === userEmail && item.password === userPassword) {\n          setClient({\n            userEmail,\n            userPassword\n          });\n        } else {\n          console.log({\n            message: \"Usuário não encontrado.\"\n          });\n        }\n      });\n    });\n  };\n  const logout = () => {\n    setClient(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      client,\n      loginOK: !!client,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"jBeftI3Q+GrQvd7t6mthxLZMxhM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","client","setClient","register","userName","userEmail","userPassword","userContact","get","then","_ref2","data","filter","item","map","email","console","log","login","_ref3","password","message","logout","Provider","value","loginOK","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Pastas/Serious Things/Folder_Developer/React/Site_Pizzaria/client/src/context/auth.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [client, setClient] = useState()\r\n\r\n    const register = (userName, userEmail, userPassword, userContact) => {\r\n\r\n        api.get('/clients').then(({data}) => {\r\n            data.filter((item) => {\r\n                \r\n            }).map((item) => {\r\n                if(item.email === userEmail){\r\n                    console.log(\"Já existe\")\r\n                } else {\r\n                    console.log(\"Novo usuário\")\r\n                }\r\n            })\r\n        })\r\n           \r\n            // api.post('/clients', {\r\n            //     name: userName,\r\n            //     email: userEmail,\r\n            //     password: userPassword,\r\n            //     contact: userContact\r\n            // }).then((response) => {\r\n            //     console.log(response)\r\n            // });\r\n    \r\n    }\r\n\r\n    const login = (userEmail, userPassword) => {  \r\n        api.get('/clients')\r\n        .then(({ data }) => {\r\n            data.map((item) => {    \r\n                if(item.email === userEmail && item.password === userPassword){\r\n                    setClient({ userEmail, userPassword })\r\n                } else {\r\n                    console.log({message: \"Usuário não encontrado.\"})\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setClient(null);\r\n    }\r\n    \r\n    return(\r\n        <AuthContext.Provider value={{client, loginOK: !!client, login, register, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC,CAAC,CAAC;AAE5C,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,EAAE;EAEtC,MAAMW,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,YAAY,EAAEC,WAAW,KAAK;IAEjEd,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC,CAACC,IAAI,CAACC,KAAA,IAAY;MAAA,IAAX;QAACC;MAAI,CAAC,GAAAD,KAAA;MAC5BC,IAAI,CAACC,MAAM,CAAEC,IAAI,IAAK,CAEtB,CAAC,CAAC,CAACC,GAAG,CAAED,IAAI,IAAK;QACb,IAAGA,IAAI,CAACE,KAAK,KAAKV,SAAS,EAAC;UACxBW,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QAC5B,CAAC,MAAM;UACHD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC/B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;;IAEE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAER,CAAC;;EAED,MAAMC,KAAK,GAAGA,CAACb,SAAS,EAAEC,YAAY,KAAK;IACvCb,GAAG,CAACe,GAAG,CAAC,UAAU,CAAC,CAClBC,IAAI,CAACU,KAAA,IAAc;MAAA,IAAb;QAAER;MAAK,CAAC,GAAAQ,KAAA;MACXR,IAAI,CAACG,GAAG,CAAED,IAAI,IAAK;QACf,IAAGA,IAAI,CAACE,KAAK,KAAKV,SAAS,IAAIQ,IAAI,CAACO,QAAQ,KAAKd,YAAY,EAAC;UAC1DJ,SAAS,CAAC;YAAEG,SAAS;YAAEC;UAAa,CAAC,CAAC;QAC1C,CAAC,MAAM;UACHU,OAAO,CAACC,GAAG,CAAC;YAACI,OAAO,EAAE;UAAyB,CAAC,CAAC;QACrD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBpB,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAACvB,MAAM;MAAEwB,OAAO,EAAE,CAAC,CAACxB,MAAM;MAAEiB,KAAK;MAAEf,QAAQ;MAAEmB;IAAM,CAAE;IAAAtB,QAAA,EAC7EA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAG/B,CAAC;AAAA9B,EAAA,CAnDYF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}