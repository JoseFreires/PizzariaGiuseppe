{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Pastas\\\\Serious Things\\\\Folder_Developer\\\\React\\\\Site_Pizzaria\\\\client\\\\src\\\\context\\\\auth.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport api from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [client, setClient] = useState();\n  const [userNow, setUserNow] = useState();\n  const register = (userName, userEmail, userPassword, userContact, userAdress) => {\n    api.post('/clients', {\n      name: userName,\n      email: userEmail,\n      password: userPassword,\n      contact: userContact,\n      adress: userAdress\n    }).then(response => {\n      console.log(response.data);\n      setUserNowuserNow(userEmail);\n      console.log();\n    }).catch(error => {\n      console.error(error.response);\n    });\n  };\n  const login = (userEmail, userPassword) => {\n    api.get('/clients').then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      data.map(item => {\n        if (item.email === userEmail && item.password === userPassword) {\n          setClient({\n            userEmail,\n            userPassword\n          });\n        } else {\n          console.log({\n            message: \"Usuário não encontrado.\"\n          });\n        }\n        return console.log(\"Estou no map\");\n      });\n    });\n  };\n  const logout = () => {\n    setClient(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      client,\n      loginOK: !!client,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"icxaY1M8cV0ZMtiWU6sM4s+kbVQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","client","setClient","userNow","setUserNow","register","userName","userEmail","userPassword","userContact","userAdress","post","name","email","password","contact","adress","then","response","console","log","data","setUserNowuserNow","catch","error","login","get","_ref2","map","item","message","logout","Provider","value","loginOK","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Pastas/Serious Things/Folder_Developer/React/Site_Pizzaria/client/src/context/auth.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nimport api from \"../services/api\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [client, setClient] = useState();\r\n    const [userNow, setUserNow] = useState();\r\n\r\n    const register = (userName, userEmail, userPassword, userContact, userAdress) => {\r\n        \r\n        api.post('/clients', {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword,\r\n            contact: userContact,\r\n            adress: userAdress\r\n        }).then((response) => {\r\n            console.log(response.data)\r\n            setUserNowuserNow(userEmail)\r\n            console.log()\r\n        }).catch((error) => {\r\n            console.error(error.response)\r\n        })\r\n\r\n    }\r\n\r\n    const login = (userEmail, userPassword) => {  \r\n        api.get('/clients')\r\n        .then(({ data }) => {\r\n            data.map((item) => {    \r\n                if(item.email === userEmail && item.password === userPassword){\r\n                    setClient({ userEmail, userPassword })\r\n                } else {\r\n                    console.log({message: \"Usuário não encontrado.\"})\r\n                }\r\n                return(\r\n                    console.log(\"Estou no map\")\r\n                )\r\n            })\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setClient(null);\r\n    }\r\n    \r\n    return(\r\n        <AuthContext.Provider value={{client, loginOK: !!client, login, register, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAE/C,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;AAE5C,OAAO,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,EAAE;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,EAAE;EAExC,MAAMa,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,YAAY,EAAEC,WAAW,EAAEC,UAAU,KAAK;IAE7EjB,GAAG,CAACkB,IAAI,CAAC,UAAU,EAAE;MACjBC,IAAI,EAAEN,QAAQ;MACdO,KAAK,EAAEN,SAAS;MAChBO,QAAQ,EAAEN,YAAY;MACtBO,OAAO,EAAEN,WAAW;MACpBO,MAAM,EAAEN;IACZ,CAAC,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1BC,iBAAiB,CAACf,SAAS,CAAC;MAC5BY,OAAO,CAACC,GAAG,EAAE;IACjB,CAAC,CAAC,CAACG,KAAK,CAAEC,KAAK,IAAK;MAChBL,OAAO,CAACK,KAAK,CAACA,KAAK,CAACN,QAAQ,CAAC;IACjC,CAAC,CAAC;EAEN,CAAC;EAED,MAAMO,KAAK,GAAGA,CAAClB,SAAS,EAAEC,YAAY,KAAK;IACvCf,GAAG,CAACiC,GAAG,CAAC,UAAU,CAAC,CAClBT,IAAI,CAACU,KAAA,IAAc;MAAA,IAAb;QAAEN;MAAK,CAAC,GAAAM,KAAA;MACXN,IAAI,CAACO,GAAG,CAAEC,IAAI,IAAK;QACf,IAAGA,IAAI,CAAChB,KAAK,KAAKN,SAAS,IAAIsB,IAAI,CAACf,QAAQ,KAAKN,YAAY,EAAC;UAC1DN,SAAS,CAAC;YAAEK,SAAS;YAAEC;UAAa,CAAC,CAAC;QAC1C,CAAC,MAAM;UACHW,OAAO,CAACC,GAAG,CAAC;YAACU,OAAO,EAAE;UAAyB,CAAC,CAAC;QACrD;QACA,OACIX,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAEnC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACjB7B,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACIP,OAAA,CAACC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAChC,MAAM;MAAEiC,OAAO,EAAE,CAAC,CAACjC,MAAM;MAAEwB,KAAK;MAAEpB,QAAQ;MAAE0B;IAAM,CAAE;IAAA/B,QAAA,EAC7EA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAG/B,CAAC;AAAAvC,EAAA,CAhDYF,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}